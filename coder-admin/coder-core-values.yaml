# The Coder Helm values and defaults can be found here
# https://github.com/coder/coder/blob/main/helm/coder/values.yaml

coder:
  # coder.env -- The environment variables to set for Coder. These can be used
  # to configure all aspects of `coder server`. Please see `coder server --help`
  # for information about what environment variables can be set.
  env:
  - name: CODER_ACCESS_URL
    value: "http://k8s-coder-coder-a413964be3-1603651123.us-east-2.elb.amazonaws.com/"
#  - name: CODER_WILDCARD_ACCESS_URL
#    value: ""
#  - name: CODER_HTTP_ADDRESS
#    value: "0.0.0.0:80"
#  - name: CODER_TLS_ADDRESS
#    value: "0.0.0.0:443"
  - name: CODER_PG_CONNECTION_URL
    valueFrom:
      secretKeyRef:
        key: url
        name: coder-db-url
  - name: CODER_DISABLE_PASSWORD_AUTH
    value: "false"      
  - name: CODER_SWAGGER_ENABLE
    value: "true"
  - name: CODER_REDIRECT_TO_ACCESS_URL
    value: "false"
  
  # OIDC/SSO configuration
  #- name: CODER_OIDC_ISSUER_URL
  #  value: https://login.microsoftonline.com/110f0c0f-cd76-4717-a6f8-4eea3d0f8109/v2.0
  #- name: CODER_OIDC_EMAIL_DOMAIN
  #  value: accountscoder.onmicrosoft.com,coder.com
  #- name: CODER_OIDC_CLIENT_ID
  #  valueFrom:
  #    secretKeyRef:
  #      key: client-id
  #      name: azure-ad-secret
  #- name: CODER_OIDC_CLIENT_SECRET
  #  valueFrom:
  #    secretKeyRef:
  #      key: client-secret
  #      name: azure-ad-secret
  #- name: CODER_OIDC_SCOPES
  #  value: openid,profile,email
  #- name: CODER_OIDC_SIGN_IN_TEXT
  #  value: Microsoft Entra ID
  #- name: CODER_OIDC_ICON_URL
  #  value: /icon/azure.png

  # External Authentication - Github
  #- name: CODER_EXTERNAL_AUTH_0_ID
  #  value: primary-github
  #- name: CODER_EXTERNAL_AUTH_0_TYPE
  #  value: github
  #- name: CODER_EXTERNAL_AUTH_0_CLIENT_ID
  #  value: 
  #- name: CODER_EXTERNAL_AUTH_0_CLIENT_SECRET
  #  value: 
  
  # External Authentication - Jfrog
  #- name: CODER_EXTERNAL_AUTH_1_ID
  #  value: jfrog
  #- name: CODER_EXTERNAL_AUTH_1_TYPE
  #  value: jfrog
  #- name: CODER_EXTERNAL_AUTH_1_DISPLAY_NAME
  #  value: JFrog Artifactory
  #- name: CODER_EXTERNAL_AUTH_1_DISPLAY_ICON
  #  value: /icon/jfrog.svg
  #- name: CODER_EXTERNAL_AUTH_1_CLIENT_ID
  #  value: 
  #- name: CODER_EXTERNAL_AUTH_1_CLIENT_SECRET
  #  value: 
  #- name: CODER_EXTERNAL_AUTH_1_AUTH_URL
  #  value: https://coderintegration.jfrog.io/ui/authorization
  #- name: CODER_EXTERNAL_AUTH_1_TOKEN_URL
  #  value: 
  #- name: CODER_EXTERNAL_AUTH_1_SCOPES
  #  value: applied-permissions/user
  
  # Internal Provisioner
  - name: CODER_PROVISIONER_DAEMONS
    value: "2"
  - name: CODER_VERBOSE
    value: "false"
  - name: CODER_DERP_SERVER_ENABLE
    value: "true"

  # Telemetery and prometheus metric config
  #- name: CODER_TELEMETRY_ENABLE
  #  value: "true"
  #- name: CODER_PROMETHEUS_ADDRESS
  #  value: 0.0.0.0:2112
  #- name: CODER_PROMETHEUS_ENABLE
  #  value: "true"
  #- name: CODER_PROMETHEUS_COLLECT_AGENT_STATS
  #  value: "true"

  # Enable metric scraping
  #podAnnotations:
  #  prometheus.io/port: "2112"
  #  prometheus.io/scrape: "true"
  
  # Enable HA for Coderd
  replicaCount: 2

  resources:
    limits:
      cpu: 2000m
      memory: 4096Mi
    requests:
      cpu: 2000m
      memory: 4096Mi
 
  # Additional pod labels
  #podLabels:
  #  app: coder

  # Pod Topology Spread Constraints
  #topologySpreadConstraints:
  #- maxSkew: 1
  #  topologyKey: kubernetes.io/hostname
  #  whenUnsatisfiable: ScheduleAnyway
  #  labelSelector:
  #    matchLabels:
  #      app: coder
 
  # Service object to expose for Coder
  service:
    enable: true
    type: ClusterIP
    sessionAffinity: None
    coder.service.externalTrafficPolicy: Cluster
    loadBalancerIP: ""
    # coder.service.annotations -- The service annotations. See:
    # https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    annotations: {}
    # coder.service.httpNodePort -- Enabled if coder.service.type is set to
    # NodePort. If not set, Kubernetes will allocate a port from the default
    # range, 30000-32767.
    httpNodePort: ""
    # coder.service.httpsNodePort -- Enabled if coder.service.type is set to
    # NodePort. If not set, Kubernetes will allocate a port from the default
    # range, 30000-32767.
    httpsNodePort: ""

  # coder.ingress -- The Ingress object to expose for Coder.
  ingress:
    # coder.ingress.enable -- Whether to create the Ingress object. If using an
    # Ingress, we recommend not specifying coder.tls.secretNames as the Ingress
    # will handle TLS termination.
    enable: true
    # coder.ingress.className -- The name of the Ingress class to use.
    className: "alb"
    # coder.ingress.host -- The hostname to match on.
    # Be sure to also set CODER_ACCESS_URL within coder.env[]
    host: ""
    # coder.ingress.wildcardHost -- The wildcard hostname to match on. Should be
    # in the form "*.example.com" or "*-suffix.example.com". If you are using a
    # suffix after the wildcard, the suffix will be stripped from the created
    # ingress to ensure that it is a legal ingress host. Optional if not using
    # applications over subdomains.
    # Be sure to also set CODER_WILDCARD_ACCESS_URL within coder.env[]
    wildcardHost: ""
    # coder.ingress.annotations -- The ingress annotations.
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
    # coder.ingress.tls -- The TLS configuration to use for the Ingress.
    tls:
      # coder.ingress.tls.enable -- Whether to enable TLS on the Ingress.
      enable: false
      # coder.ingress.tls.secretName -- The name of the TLS secret to use.
      secretName: ""
      # coder.ingress.tls.wildcardSecretName -- The name of the TLS secret to
      # use for the wildcard host.
      wildcardSecretName: ""
  
  # Service account configuration - cannot be diabled
  serviceAccount:
    # Whether or not to grant the coder service account permissions to manage workspaces. 
    # This includes permission to manage pods and persistent volume claims in the deployment namespace.
    # It is recommended to keep this on if you are using Kubernetes templates within Coder.
    workspacePerms: true
  
    # Provides the service account permission to manage Kubernetes deployments. 
    # Depends on workspacePerms.
    enableDeployments: true
    
  # TLS secret name
  #tls:
  #  secretNames:
  #  - gcp-tls

# External Provisioner Daemon 
#provisionerDaemon:
#  pskSecretName: "coder-provisioner-psk"


# Additional Configurations
    #- name: CODER_BLOCK_DIRECT
    #  value: "false"
    #- name: CODER_DERP_FORCE_WEBSOCKETS
    #  value: "false"
    #- name: CODER_DANGEROUS_ALLOW_PATH_APP_SHARING
    #  value: "true"
    #- name: CODER_DANGEROUS_ALLOW_PATH_APP_SITE_OWNER_ACCESS
    #  value: "true"